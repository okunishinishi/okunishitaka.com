/**
 * Take a backup.
 */

"use strict";

var h = require('../_helper'),
    dateformat = h.dateformat,
    async = h.async,
    fs = h.fs,
    copyDir = h.copyDir,
    config = require('../configs/backup_config'),
    appSettings = require('../../app/app_settings');

process.chdir(h.basedir);


var dataBackupDir = 'var/backup/data';

async.series([
    function cleanData(callback) {
        var dirname = dataBackupDir;
        async.waterfall([
            function (callback) {
                fs.readdir(dirname, callback);
            },
            function (filenames, callback) {
                var generations = config.generations;
                var cleaning = filenames
                    .filter(h.filtering.patternAcceptFilter(/^bk\-/))
                    .map(h.mapping.pathResolveMap(dirname))
                    .sort(h.sorting.stringDescSort())
                    .slice(generations - 1);
                callback(null, cleaning);
            },
            function (filenames, callback) {
                async.eachSeries(filenames, function (filename, callback) {
                    h.rmdirRecursive(filename, callback);
                }, callback);
            }
        ], callback);
    },
    function backupData(callback) {
        var srcDir = appSettings.dataDir,
            destDir = [
                dataBackupDir,
                ['bk', new Date().getTime()].join('-')
            ].join('/');
        copyDir(srcDir, destDir, callback);
    }
], h.done('Backup done!'));

